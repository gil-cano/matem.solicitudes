<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="plone">

<!-- DataGridWidget row renderer
  Overriding edit_row of DataGridWidget for provide
  different styles
    Author Base: Mikko Ohtamaa, 2006
-->

  <body>

    <!-- EDIT -->
    <metal:define define-macro="edit_row">
      <tr id="datagridwidget-row" class="datagridwidget-row"
        tal:define="oddrow repeat/rows/odd"
        tal:condition="python: rows.get('orderindex_') != 'template_row_marker'">
        <tal:vars define="fieldId string:${fieldName}_${repeat/rows/number};">
          <td class="gridwidget">
            <h3 i18n:translate="" tal:content="field/label_item"/>
            <tal:block tal:repeat="columnd columns">
              <span tal:attributes="class python:'%s datagridwidget-column-%s datagridwidget-cell' % (
                                                   not columnd['visible'] and 'dgw-hidden-column' or '',
                                                   repeat['columnd'].number());">
                <tal:cell tal:define="
                            column columnd/id;
                            column_label columnd/label;
                            column_definition python: widget.getColumnDefinition(field, column);
                            valuesfoo python:column_definition.processCellData(context.REQUEST.form, value, context, field, column)[0].get(column, []);
                            cell_macro python: path('here/%s/macros' % column_definition.getMacro());
                            edit_macro cell_macro/edit_cell;
                            cell_value python:rows.get(column);">
                  <label tal:attributes="for column">
                  <!-- LOS VALORES:<span tal:content="valuesfoo"/> -->
                    <br/><span i18n:translate="" tal:content="column_label">label</span><br/>
                  </label>
                  <span metal:use-macro="edit_macro"/>
                </tal:cell>
              </span>
            </tal:block>
          </td>

          <tal:comment replace="nothing">
            Following code renders DataGridWidget manipulation buttons
          </tal:comment>

          <tal:call metal:use-macro="here/widget_manipulators/macros/edit_manipulators"/>

        </tal:vars>
      </tr>
    </metal:define>

    <metal:define define-macro="edit_empty_row">
      <tr id="datagridwidget-empty-row"
          class="datagridwidget-empty-row"
          tal:define="fieldId string:${fieldName}_new;">
        <td class="gridwidget">
          <h3 i18n:translate="" tal:content="field/label_item"/>
          <tal:block tal:repeat="columnd columns">
            <span tal:attributes="class python:not columnd['visible'] and 'dgw-hidden-column datagridwidget-cell' or 'datagridwidget-cell';">
              <span class="field" tal:define="
                    column columnd/id;
                    column_label columnd/label;
                    column_definition python: widget.getColumnDefinition(field, column);
                    cell_macro python: path('here/%s/macros' % column_definition.getMacro());
                    edit_empty_macro cell_macro/edit_empty_cell;">
                <label tal:attributes="for column">
                  <br/><span i18n:translate="" tal:content="column_label">label</span><br/>
                </label>
                <span metal:use-macro="edit_empty_macro"/>
              </span>
            </span>
          </tal:block>
        </td>
        <tal:comment replace="nothing">
          Following code renders DataGridWidget manipulation buttons
        </tal:comment>

        <tal:call metal:use-macro="here/widget_manipulators/macros/edit_manipulators"/>

      </tr>
    </metal:define>
  </body>
</html>
