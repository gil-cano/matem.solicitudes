<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="matem.solicitudes">

<body>

    <!-- EDIT -->
    <metal:define define-macro="edit_row">
      <tr id="coursewidget-row" class="coursewidget-row">
        Preparar el rengl√≥n para editar, debe de ir todo el esquema del elemento a pintar
      </tr>

         <!-- <tr id="datagridwidget-row" class="datagridwidget-row"
             tal:define="oddrow repeat/rows/odd"
             tal:condition="python: rows.get('orderindex_') != 'template_row_marker'"
             tal:attributes="class python:field.allow_oddeven and (oddrow and 'odd' or 'even') or nothing;">
            <tal:vars define="fieldId string:${fieldName}_${repeat/rows/number};">
              <tal:block tal:repeat="columnd columns">
                <td tal:attributes="class python:'%s datagridwidget-column-%s datagridwidget-cell' % (
                                                 not columnd['visible'] and 'dgw-hidden-column' or '',
                                                 repeat['columnd'].number());">
                     <tal:cell tal:define="
                           column columnd/id;
                           column_definition python: widget.getColumnDefinition(field, column);
                           cell_macro python: path('here/%s/macros' % column_definition.getMacro());
                           edit_macro cell_macro/edit_cell;
                           cell_value python:rows.get(column);">
                           <span metal:use-macro="edit_macro"/>
                     </tal:cell>
                </td>
              </tal:block>

                <tal:comment replace="nothing">
                    Following code renders DataGridWidget manipulation buttons
                </tal:comment>
                <tal:call metal:use-macro="here/datagridwidget_manipulators/macros/edit_manipulators"/>

            </tal:vars>
         </tr> -->
    </metal:define>

    <metal:define define-macro="edit_empty_row">
      <tr id="coursewidget-empty-row"
        class="coursewidget-empty-row"
        tal:define="fieldId string:${fieldName}_new;">>
        Preparar el renglon nuevo
      </tr>
        <!-- <tr id="datagridwidget-empty-row"
            class="datagridwidget-empty-row"
            tal:define="fieldId string:${fieldName}_new;">
           <tal:block tal:repeat="columnd columns">
             <td tal:attributes="class python:not columnd['visible'] and 'dgw-hidden-column datagridwidget-cell' or 'datagridwidget-cell';">
                <span tal:define="
                   column columnd/id;
                   column_definition python: widget.getColumnDefinition(field, column);
                   cell_macro python: path('here/%s/macros' % column_definition.getMacro());
                   edit_empty_macro cell_macro/edit_empty_cell;">
                       <span metal:use-macro="edit_empty_macro"/>   
                 </span>
             </td>
           </tal:block>
    
             <tal:comment replace="nothing">
                Following code renders DataGridWidget manipulation buttons
             </tal:comment>
    
             <tal:call metal:use-macro="here/datagridwidget_manipulators/macros/edit_manipulators"/>    
            
         </tr> -->
    </metal:define>
</body>

</html>
